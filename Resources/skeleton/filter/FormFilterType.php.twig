<?php

namespace {{ namespace }}\Form{{ entity_namespace ? '\\' ~ entity_namespace : '' }};

{% block use_statements %}
use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\FormBuilderInterface;
{% if not configure_options_available %}
use Symfony\Component\OptionsResolver\OptionsResolverInterface;
{% endif %}
use Symfony\Component\OptionsResolver\OptionsResolver;
{% endblock use_statements %}

{% block class_definition %}
class {{ form_class }} extends AbstractType
{% endblock class_definition %}
{
{% block class_body %}
    {%- if fields|length > 0 %}
    /**
     * @param FormBuilderInterface $builder
     * @param array $options
     */
    public function buildForm(FormBuilderInterface $builder, array $options)
    {
        $builder
        {% for field, metadata in fields -%}
        {%- if metadata.type == 'relation' or metadata.type == 'relation_many' %}

            ->add('{{ field }}', 'filter_entity', ['label' => '{{ field|capitalize }}', 'class' => '{{ metadata.entity }}'])
        {%- elseif metadata.type == 'boolean' %}

            ->add('{{ field }}', 'filter_boolean', ['label' => '{{ field|capitalize }}'])
        {%- elseif metadata.type == 'integer' and field != 'id' %}

            ->add('{{ field }}', 'filter_number')
        {%- elseif metadata.type == 'date' or metadata.type == 'datetime' %}

            ->add('{{ field }}', 'filter_date', ['label' => '{{ field|capitalize }}'])
        {%- elseif field != 'id' %}

            ->add('{{ field }}', 'filter_text', ['label' => '{{ field|capitalize }}'])
        {%- endif %}
        {%- endfor %}
        
        ;
    }
    {% endif %}

    {%- if not configure_options_available %}

    /**
     * Sets the default options for this type.
     *
     * This method should be removed when upgrading to Symfony 2.7.
     *
     * @param OptionsResolverInterface $resolver
     */
    public function setDefaultOptions(OptionsResolverInterface $resolver)
    {
        $this->configureOptions($resolver);
    }
    {% endif %}

    /**
     * @param OptionsResolver $resolver
     */
    public function configureOptions(OptionsResolver $resolver)
    {
        $resolver->setDefaults(array(
            'data_class' => '{{ namespace }}\Entity{{ entity_namespace ? '\\' ~ entity_namespace : '' }}\{{ entity_class }}',
            'csrf_protection'   => false,
            'validation_groups' => array('filter'),
            'method'            => 'GET',
        ));
    }

    {%- if get_name_required %}

    /**
     * @return string
     */
    public function getName()
    {
        return '{{ form_type_name }}_filter';
    }
    {% endif %}

{% endblock class_body %}
}